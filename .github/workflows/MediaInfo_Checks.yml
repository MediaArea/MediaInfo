name: Checks

on: [push, pull_request]

jobs:
  Unix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y zlib1g-dev libwxgtk3.2-dev
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install libtool automake wxmac
          fi
      - name: ZenLib
        run: |
          git -C .. clone --depth=1 https://github.com/MediaArea/ZenLib.git
          pushd ../ZenLib/Project/GNU/Library
            autoreconf -if
            ./configure --enable-static
            make
          popd
      - name: MediaInfoLib
        run: |
          git -C .. clone --depth=1 https://github.com/MediaArea/MediaInfoLib.git
          pushd ../MediaInfoLib/Project/GNU/Library
            autoreconf -if
            ./configure --enable-static
            make
          popd
      - name: Configure
        run: |
          cd Project/GNU/CLI
          autoreconf -if
          ./configure --enable-staticlibs
      - name: Build
        run: |
          cd Project/GNU/CLI
          make
      - name: Configure GUI
        run: |
          cd Project/GNU/GUI
          autoreconf -if
          ./configure --enable-staticlibs
      - name: Build GUI
        run: |
          cd Project/GNU/GUI
          make

  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [ Win32, x64, ARM64 ]
      fail-fast: false
    steps:
    - name: Checkout zlib
      uses: actions/checkout@v4
      with:
        repository: MediaArea/zlib
        path: zlib
    - name: Checkout ZenLib
      uses: actions/checkout@v4
      with:
        repository: MediaArea/ZenLib
        path: ZenLib
    - name: Checkout MediaInfoLib
      uses: actions/checkout@v4
      with:
        repository: MediaArea/MediaInfoLib
        path: MediaInfoLib
    - name: Checkout MediaArea-Utils for MediaInfo_NoGUI patch
      uses: actions/checkout@v4
      with:
        repository: MediaArea/MediaArea-Utils
        path: MediaArea-Utils
        sparse-checkout: build_release/Diff/MediaInfo_NoGUI.diff
        sparse-checkout-cone-mode: false
    - name: Checkout MediaInfo
      uses: actions/checkout@v4
      with:
        path: MediaInfo
    - name: Apply MediaInfo_NoGUI patch
      run: cd ${{ github.workspace }}\MediaInfo && git apply ${{ github.workspace }}\MediaArea-Utils\build_release\Diff\MediaInfo_NoGUI.diff
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - name: Build
      run: msbuild /restore /p:RestorePackagesConfig=true /p:Configuration=Release /p:Platform=${{ matrix.architecture }} ${{ github.workspace }}\MediaInfo\Project\MSVC2022\MediaInfo.sln /verbosity:quiet /warnaserror

